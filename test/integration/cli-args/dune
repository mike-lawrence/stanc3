(rule
 (targets filename_error.output)
 (deps
  (package stanc)
  filename_error.stan)
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args} "%{bin:stanc} --filename-in-msg=foo.stan "
     filename_error.stan))))

(rule
 (alias runtest)
 (action
  (diff filename_error.expected filename_error.output)))

(rule
 (targets filename_good.output)
 (deps
  (package stanc)
  filename_good.stan)
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args}
     "%{bin:stanc} --filename-in-msg=foo.stan --print-cpp "
     filename_good.stan))))

(rule
 (alias runtest)
 (action
  (diff filename_good.expected filename_good.output)))

(rule
 (targets info.output)
 (deps
  (package stanc)
  info.stan
  included.stan
  includes/recursive.stan
  includes/another_include.stan)
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args}
     "%{bin:stanc} --include-paths=.,includes --info " info.stan))))

(rule
 (alias runtest)
 (action
  (diff info.expected info.output)))

(rule
 (targets notfound.output)
 (deps
  (package stanc))
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args} "%{bin:stanc}" notfound.stan))))

(rule
 (alias runtest)
 (action
  (diff notfound.expected notfound.output)))
